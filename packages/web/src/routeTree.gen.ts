/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as MainImport } from './routes/_main'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const MainGoalsLazyImport = createFileRoute('/_main/goals')()
const MainGoalsNewLazyImport = createFileRoute('/_main/goals/new')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signin.lazy').then((d) => d.Route))

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_main.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MainGoalsLazyRoute = MainGoalsLazyImport.update({
  path: '/goals',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main.goals.lazy').then((d) => d.Route))

const MainGoalsNewLazyRoute = MainGoalsNewLazyImport.update({
  path: '/new',
  getParentRoute: () => MainGoalsLazyRoute,
} as any).lazy(() =>
  import('./routes/_main.goals.new.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_main/goals': {
      id: '/_main/goals'
      path: '/goals'
      fullPath: '/goals'
      preLoaderRoute: typeof MainGoalsLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/goals/new': {
      id: '/_main/goals/new'
      path: '/new'
      fullPath: '/goals/new'
      preLoaderRoute: typeof MainGoalsNewLazyImport
      parentRoute: typeof MainGoalsLazyImport
    }
  }
}

// Create and export the route tree

interface MainGoalsLazyRouteChildren {
  MainGoalsNewLazyRoute: typeof MainGoalsNewLazyRoute
}

const MainGoalsLazyRouteChildren: MainGoalsLazyRouteChildren = {
  MainGoalsNewLazyRoute: MainGoalsNewLazyRoute,
}

const MainGoalsLazyRouteWithChildren = MainGoalsLazyRoute._addFileChildren(
  MainGoalsLazyRouteChildren,
)

interface MainRouteChildren {
  MainGoalsLazyRoute: typeof MainGoalsLazyRouteWithChildren
}

const MainRouteChildren: MainRouteChildren = {
  MainGoalsLazyRoute: MainGoalsLazyRouteWithChildren,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof MainRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutLazyRoute
  '/goals': typeof MainGoalsLazyRouteWithChildren
  '/goals/new': typeof MainGoalsNewLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof MainRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutLazyRoute
  '/goals': typeof MainGoalsLazyRouteWithChildren
  '/goals/new': typeof MainGoalsNewLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_main': typeof MainRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/about': typeof AboutLazyRoute
  '/_main/goals': typeof MainGoalsLazyRouteWithChildren
  '/_main/goals/new': typeof MainGoalsNewLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/about'
    | '/goals'
    | '/goals/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/signin' | '/signup' | '/about' | '/goals' | '/goals/new'
  id:
    | '__root__'
    | '/'
    | '/_main'
    | '/signin'
    | '/signup'
    | '/about'
    | '/_main/goals'
    | '/_main/goals/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainRoute: typeof MainRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  AboutLazyRoute: typeof AboutLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRoute: MainRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  AboutLazyRoute: AboutLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_main",
        "/signin",
        "/signup",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/goals"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/_main/goals": {
      "filePath": "_main.goals.lazy.tsx",
      "parent": "/_main",
      "children": [
        "/_main/goals/new"
      ]
    },
    "/_main/goals/new": {
      "filePath": "_main.goals.new.lazy.tsx",
      "parent": "/_main/goals"
    }
  }
}
ROUTE_MANIFEST_END */
